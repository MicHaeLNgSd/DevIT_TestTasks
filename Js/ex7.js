//7.  Напишите функцию, которая берет объект любой вложенности 
//и преобразует ее в единую плоскую карту с разными уровнями, разделенными косой чертой ( '/')

function mapObject(obj, prefix = '') {
    let result = {};  // Створює порожній об'єкт для зберігання результату

    for (var key in obj) {  // Перебирає всі властивості об'єкта obj
        var value = obj[key];  // Отримує значення поточної властивості

        if (typeof value === 'object' && !Array.isArray(value)) {
            // Якщо значення є об'єктом і не є масивом, то рекурсивно викликає функцію mapObject
            // з оновленим префіксом, який включає ключ поточної властивості та '/' (для відокремлення)
            const nestedMapping = mapObject(value, prefix + key + '/');
            
            // Об'єднує результати об'єднанням поточного об'єкта result і об'єкта nestedMapping
            result = { ...result, ...nestedMapping };
        } else {
            // Якщо значення не є об'єктом або масивом, то просто додає його до об'єкта result з урахуванням префіксу
            result[prefix + key] = value;
        }
    }
    
    // Повертає об'єкт result (у вигляді плоскої структури)
    return result;  
}

const obj = {
    a: {
      b: {
        c: 12,
        d: 'Hello World'
      },
      e: [1,2,3]
    }
};

// Виводить результат обробки об'єкта obj у вигляді плоскої структури
console.log(mapObject(obj));

// Результат: {
//     'a/b/c': 12,
//     'a/b/d': 'Hello World',
//     'a/e': [1,2,3]
//   }